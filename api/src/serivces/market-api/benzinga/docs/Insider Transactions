**Converting HTML to Markdown**

The user has provided a large HTML snippet about Benzinga’s API reference for GET Insider Transactions, asking for it to be converted into Markdown.

I'll convert headings, paragraphs, code blocks, and lists into a cleaner Markdown format. Given the large amount of content, I'll start with the top-level header, code example, and summary. The goal is to cleanly summarize the content into a readable, concise Markdown document without losing key information.


Thought for a few seconds


````markdown
# SEC Filings

## GET Insider Transactions

**Returns insider transactions data (SEC Form 4).**

---

### Request

```http
GET https://api.benzinga.com/api/v1/sec/insider_transactions/filings
Accept: <accept>
````

<details>
<summary>JavaScript example</summary>

```js
const options = { method: 'GET' };

fetch('https://api.benzinga.com/api/v1/sec/insider_transactions/filings', options)
  .then(response => response.json())
  .then(data => console.log(data))
  .catch(err => console.error(err));
```

</details>

---

### Authorization

| Name  | In    | Type   | Required |
| ----- | ----- | ------ | -------- |
| token | query | string | yes      |

---

### Query Parameters

| Name               | Type         | Default | Description                                                       |
| ------------------ | ------------ | ------- | ----------------------------------------------------------------- |
| date               | string       | latest  | Shorthand for `date_from` and `date_to` when they’re the same.    |
| date\_from         | string       | —       | Starting date for the query.                                      |
| date\_to           | string       | —       | Ending date for the query.                                        |
| fields             | string\[]    | —       | Comma-separated list of fields to return.                         |
| pagesize           | integer      | 50      | Number of results (max 1000).                                     |
| page               | integer      | 0       | Page offset.                                                      |
| search\_keys       | string       | —       | Comma-separated list of US equity ticker symbols (max 50).        |
| search\_keys\_type | enum<string> | symbol  | One of `symbol`, `accession_number`, or `id`.                     |
| updated\_since     | number       | —       | Unix timestamp (UTC) to filter records last updated ≥ this value. |

---

### Response (200 – application/json)

```json
[
  {
    "id": "<string>",
    "accession_number": "<string>",
    "company_cik": "<string>",
    "company_name": "<string>",
    "company_symbol": "<string>",
    "filing_date": "<string>",
    "footnotes": [
      { "id": "<string>", "text": "<string>" }
    ],
    "form_type": "<string>",
    "html_url": "<string>",
    "owner": {
      "insider_cik": "<string>",
      "insider_name": "<string>",
      "insider_title": "<string>",
      "is_director": true,
      "is_officer": true,
      "is_other_relation": true,
      "is_ten_percent_owner": true,
      "raw_signature": "<string>"
    },
    "transactions": [
      {
        "is_derivative": true,
        "acquired_or_disposed": "<string>",
        "conversion_exercise_price_derivative": "<string>",
        "date_deemed_execution": "<string>",
        "date_exercisable": "<string>",
        "date_expiration": "<string>",
        "date_transaction": "<string>",
        "post_transaction_quantity": 123,
        "price_per_share": "<string>",
        "security_title": "<string>",
        "shares": 123,
        "transaction_code": "<string>",
        "transaction_id": "<string>",
        "underlying_security_title": "<string>",
        "underlying_shares": 123,
        "voluntarily_reported": "<string>"
      }
    ],
    "updated": 123
  }
]
```

---

```
```
